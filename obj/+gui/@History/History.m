classdef History < handle

    properties
        PsychophysicsObj
    end

    properties (SetAccess = private)
        ContainerH

        ColumnName
        Data
        Info
    end

    properties (Access = private)
        listener_NewData
    end

    methods

        function obj = History(pObj,Helper,container)
            if nargin < 3 || isempty(container), container = figure; end
            
            obj.ContainerH = container;

            obj.build;
            
            if nargin >= 1 && ~isempty(pObj)
                obj.PsychophysicsObj = pObj;

            end

            if nargin > 1 && ~isempty(Helper)
                obj.link_with_helper(Helper);
            end
        end

        function build(obj)
            obj.TableH = uitable(obj.ContainerH,'Unit','Normalized', ...
                'Position',[0 0 1 1],'RowStriping','off');
        end
        
        function link_with_helper(obj,Helper)
            if isempty(Helper) || isempty(Helper), return; end
            obj.listener_NewData = addlistener(Helper,'NewData',@obj.update_plot);
        end
        
        function update(obj,src,event)
            
            % Call a function to rearrange DATA to make it easier to use (see below).
            obj.rearrange_data;

            % Flip the DATA matrix so that the most recent trials are displayed at the
            % top of the table.
            obj.TableH.Data = flipud(obj.Data);

            % set the row names as the trial ids
            obj.TableH.RowName = flipud(obj.Info.TrialID);

            % set the column names
            obj.TableH.ColumnName = obj.ColumnName;
        end
        
        function set.PsychophysicsObj(obj,pobj)
            assert(epsych.Helper.valid_psych_obj(pobj),'gui.History:set.PsychophysicsObj', ...
                'PsychophysicsObj must be from the toolbox "psychophysics"');
            obj.PsychophysicsObj = pobj;
            obj.update;
        end
    end

    methods (Access = private)
        function update_row_colors(obj)
            if ~epsych.Helper.valid_psych_obj, return; end
            C(size(obj.Data,1),3) = 0;
            R = cellfun(@epsych.BitMask,obj.Data(:,2));
            for i = 1:obj.PsychophysicsObj.BitsInUse
                ind = R == obj.PsychophysicsObj.BitsInUse(i);
                if ~any(ind), continue; end
                C(ind,:) = repmat(obj.PsychophysicsObj.BitColors(i,:),sum(ind),1);
            end
        end
        
        function rearrange_data(obj)
            DataIn = obj.PsychophysicsObj.DATA;

            % Trial numbers
            obj.Info.TrialID = [DataIn.TrialID]';
            
            % Crude timestamp of when the trial occured.  This is not indended for use
            % in data analysis.  For physiology analysis use timestamps generated by the TDT hardware
            % since it is much more accurate and precise.
            obj.Info.ComputerTimestamp = cellfun(@(a) datestr(a,'HH:MM:SS.FFF'),{DataIn.ComputerTimestamp}','uni',0);
            obj.Info.RelativeTimestamp = [0; diff(Timestamps)];

            % remove these fields
            DataIn = rmfield(DataIn,{'ResponseCode','TrialID','ComputerTimestamp'});
            
            
            % The remaining fields of the DATA structure contain parameters for each
            % trial.
            dataFields = fieldnames(DataIn);
            for i = 1:length(dataFields)
                DataOut(:,i) = [DataIn.(dataFields{i})];
            end
            
            % prefix Timestamp and Respnose fields
            DataOut = num2cell(DataOut);
            
            Response = {DataIn.ResponseCode};
            if epsych.Helper.valid_psych_obj
                Response = cellfun(@(a) bitget(a,obj.PsychophysicsObj.BitsInUse),Response,'uni',0);
            end
            DataOut = [Response(:) DataOut];

            DataOut = [INFO.RelativeTimestamp DataOut];
            
            obj.ColumnName = [{'Time'}; {'Response'}; dataFields];
            
            obj.Data = DataOut;
        end
    end
end